# plugins = "{path}/hooks.py"

# Global settings - most REQUIRED
time_framework = [2020, 2025, 2030, 2035, 2040, 2045, 2050]
foresight = 5   # Has to be a multiple of the minimum separation between the years in time framework
regions = ["Kenya"]
interest_rate = 0.1
interpolation_mode = 'Active'
log_level = 'info'
excluded_commodities = ["crude_oil", "biomass", "coal", "gas", "geothermal", "hydro", "solar", "uranium", "wind", "heat", "HFO", "LFO"]


# Convergence parameters
equilibrium_variable = 'demand'
maximum_iterations = 100
tolerance = 0.5 
tolerance_unmet_demand = -0.5

[[outputs]]
quantity = "prices"
sink = "aggregate"
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"

[[outputs]]
quantity = "capacity"
sink = "aggregate"
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"
index = false
keep_columns = ['technology', 'dst_region', 'region', 'agent', 'sector', 'type', 'year', 'capacity']

[[outputs]]
quantity = "supply"
sink = "aggregate"
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"


[[outputs]]
quantity = "LCOE"
sink = "aggregate"
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"
columns = ["timeslice",	"region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"LCOE"]




# # Carbon BUDGET control
# [carbon_budget_control]
# budget = [500, 1000, 1000, 1000, 1000, 1000, 1000]
# commodities = ['CO2f']
# method = 'bisection'
# debug = false
# control_undershoot = false
# control_overshoot = false
# method_options.sample_size = 2
# method_options.refine_price = true
# method_options.price_too_high_threshold = 2
# method_options.fitter = 'linear'

[global_input_files]
projections = '{path}/input/Projections.csv'
global_commodities = '{path}/input/GlobalCommodities.csv'

[sectors.power]
type = 'default'
priority = 2
# dispatch_production = 'maximum_production_share_losses'
dispatch_production = 'maximum_production'

technodata = '{path}/technodata/power/Technodata.csv'
commodities_in = '{path}/technodata/power/CommIn.csv'
commodities_out = '{path}/technodata/power/CommOut.csv'
technodata_timeslices = '{path}/technodata/power/TechnodataTimeslices.csv'

[sectors.power.subsectors.retro_and_new]
agents = '{path}/technodata/Agents.csv'
existing_capacity = '{path}/technodata/power/ExistingCapacity.csv'
lpsolver = "adhoc"

constraints = [  # Optional, defaults to the constraints below
    "max_production",
    "max_capacity_expansion",
    "demand",
    "search_space",
]
demand_share = "new_and_retro"  # Optional, default to new_and_retro
forecast = 5  # Optional, defaults to 5 

[[sectors.power.outputs]]
filename = '{cwd}/{default_output_dir}/{Sector}/{Quantity}/{year}{suffix}'
quantity = "capacity"
sink = 'csv'
overwrite = true
index = false

[[sectors.power.outputs]]
filename = '{cwd}/{default_output_dir}/{Sector}/{Quantity}/{year}{suffix}'
quantity.name = "supply"
quantity.sum_over = "timeslice"
quantity.drop = ["comm_usage", "units_prices"]
columns = ["commodity", "region", 	"technology", "year",	"supply"]
sink = 'csv'
overwrite = true

[[sectors.power.interactions]] 
net = 'new_to_retro'
interaction = 'transfer'


[[outputs]]
quantity = "timeslice_supply"
sink = "aggregate"
filename = "{path}/{default_output_dir}/MCA{Quantity}.csv"
columns = ["timeslice",	"commodity",	"region",	"installed",	"technology", "year",	"agent",	"category",	"sector",	"supply"]

# [sectors.oil]
# type = 'default'
# priority = 3
# dispatch_production = 'share'

# technodata = '{path}/technodata/oil/Technodata.csv'
# commodities_in = '{path}/technodata/oil/CommIn.csv'
# commodities_out = '{path}/technodata/oil/CommOut.csv'

# [sectors.oil.subsectors.retro_and_new]
# agents = '{path}/technodata/Agents.csv'
# existing_capacity = '{path}/technodata/oil/ExistingCapacity.csv'
# lpsolver = "scipy"


# [[sectors.oil.outputs]]
# filename = '{cwd}/{default_output_dir}/{Sector}/{Quantity}/{year}{suffix}'
# quantity = "capacity"
# sink = 'csv'
# overwrite = true
# index = false


# [[sectors.oil.interactions]] 
# net = 'new_to_retro'
# interaction = 'transfer'


[sectors.electricity_presets]
type = 'presets'
priority = 0
consumption_path= "{path}/technodata/preset/*Consumption.csv"


[timeslices]
winter.all-week.night = 1095
winter.all-week.day = 1095
spring.all-week.night = 1095
spring.all-week.day = 1095
summer.all-week.night = 1095
summer.all-week.day = 1095
autumn.all-week.night = 1095
autumn.all-week.day = 1095
level_names = ["month","day", "hour"]
 
